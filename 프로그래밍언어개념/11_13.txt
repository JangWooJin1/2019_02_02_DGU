Program State > 메모리의 정보를 나타내는 것
  메모리의 위치와 그 메모리에 있는 값 2개의 정보가 필요 > 이 정보를 map에 저장
  + 변수 x 는 메모리 0x08을 의미한다 라는 것을 저장하는 정보도 필요

  ex) Statement > statement2 > statement3 가 있을 때 statement에서의 메모리 정보, statement3에서의 메모리 정보를 가르키는게 program state
  ex) factorial.cpp 프로그램의 의미는 {undef, undef, undef} > {3, 3, 6}이다


Assignment semantics(3가지 중에 Copy vs reference semantics의 이슈가 가장 중요)(메모리를 update를 시켜주는 역할)
  1. Multiple assignment( a=b=c=0 )
  2. Assignment statement vs expression > 원래 expression은 값의 update가 발생하면 안됨
					근데 c언어는 expression에서 update가능 > 의도치 않은 side 이펙트 발생 가능
					+역으로 원래 expression에 assignment를 하면 안됨

  3. copy : value를 복사 / imperative 언어에서 많이 씀 / 실제 c언어의 포인터도 주소값을 복사해주는 copy
    vs
    reference : 같은 객체를 가르키게 함 / a에서 값을 바꾸면 b도 바뀜


control flow semantics > 조건에 따라 assignment를 해주는 것
  statement sequencing, if, while > 이 3가지만 있으면 모든 imperative 프로그램을 정의가능하다.
  1. sequence : S -> S , S2 // M0(메모리상태) > S실행 > M1 > S2실행 > M2
  2. conditional : M0 > 조건에 따라 true면 M1 이 되고 false가 되면 M2(or M0) 이됨
  3. Loop : M0 > 조건에 따라 Mn이됨 (메모리 상태를 유추하는게 3가지중에서 가장 힘듬)



I/O Semantics
  2.random access vs sequential access : random직접적인 접근이 가능
  3. 고정된 크기(fixed length) 냐 아니냐
  4. Character로 입력을 받냐 vs binary(2진수)로 입력을 하냐

 목적 : 